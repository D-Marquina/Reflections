What happens when you initialize a repository? Why do you need to do it?
A new directory is created, which is called ".git". It has to be done in order
to start using the version control.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
It holds all files that will be committed, its value resides on the fact that it
let us choose what to commit.

How can you use the staging area to make sure you have one commit per logical
change?
I can compare my current files and the previous commits to know more about my
recent changes.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Branches are helpful when you need to keep different active versions of your
project.

How do the diagrams help you visualize the branch structure?
They make clear the non-linear behavior of commits in Git.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
After merging two branches we obtain a new branch with every modification made
in each branch. When you represent it, you emphasize the fact that the result
comes from two different versions of the files.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
You need to save manually when your files may have been modified in such a way
that Git can't identify the best modification.
